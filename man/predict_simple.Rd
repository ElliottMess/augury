% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_simple.R
\name{predict_simple}
\alias{predict_simple}
\title{Use linear interpolation and flat extrapolation to infill data}
\usage{
predict_simple(
  df,
  model = c("both", "flat_extrap", "linear_interp"),
  col = "value",
  group_col = NULL,
  sort_col = NULL,
  sort_descending = FALSE,
  pred_col = "pred",
  type_col = NULL,
  types = c("imputed", "projected"),
  source_col = NULL,
  source = NULL,
  replace_obs = c("missing", "none")
)
}
\arguments{
\item{df}{Data frame of model data.}

\item{model}{An R function that outputs a model object with a \code{predict.model} generic,
where \code{\link[stats:family]{stats::family()}} contains an inverse link function \code{linkinv} and
\code{predict.model()} accepts the \code{se.fit = TRUE} argument and returns confidence
intervals. This includes \link[stats:lm]{stats::lm}, \link[stats:glm]{stats::glm}, and \link[lme4:lmer]{lme4::lmer}.}

\item{col}{Name of column to extrapolate/interpolate.}

\item{group_col}{Column name(s) of group(s) to use in \code{\link[dplyr:group_by]{dplyr::group_by()}} when
supplying type, calculating mean absolute scaled error on data involving
time series, and if \code{group_models}, then fitting and predicting models too.}

\item{sort_col}{Column name(s) to use to \code{\link[dplyr:arrange]{dplyr::arrange()}} the data prior to
supplying type and calculating mean absolute scaled error on data involving
time series.}

\item{sort_descending}{Logical value on whether the sorted values from \code{sort_col}
should be sorted in descending order. Defaults to \code{FALSE}.}

\item{pred_col}{Column name to store predicted value.}

\item{type_col}{Column name specifying data type.}

\item{types}{Types to add to missing values. The first value is for imputed
values and the second is for extrapolated values.}

\item{source_col}{Column name containing source information for the data frame.
If provided, the argument in \code{source} is used to fill in where predictions
have filled in missing data.}

\item{source}{Source to add to missing values.}

\item{replace_obs}{Character value specifying how, if at all, observations should
be replaced by infilled values. By default, replaces missing values in \code{col}
but if set to \code{"none"} then \code{col} is not changed.}
}
\value{
Depending on the value passed to \code{ret}, either a data frame with
predicted data, a vector of errors, a fitted model, or a list with all 3.
}
\description{
\code{predict_simple()} does simple linear interpolation and/or flat extrapolation
on a column using \code{\link[zoo:na.approx]{zoo::na.approx()}}. Similar to other predict functions, it also
allows filling in of type and source if necessary. However, it does not provide
confidence bounds on the estimates, like other \code{predict_...} model-based
functions provide.
}
\details{
Depending on the value of \code{model} passed to the function, linear interpolation,
flat extrapolation, or both is used on the data.
}
