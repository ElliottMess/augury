% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_models_wrappers.R
\name{grouped_predict_glm}
\alias{grouped_predict_glm}
\title{Use a generalized linear model to infill and project data by group}
\usage{
grouped_predict_glm(
  df,
  group_col = "iso3",
  formula,
  ...,
  ret = c("df", "all", "error", "model"),
  test_col = NULL,
  pred_col = "pred",
  upper_col = "upper",
  lower_col = "lower",
  filter_na = c("all", "response", "predictors", "none"),
  type_col = NULL,
  types = c("imputed", "imputed", "projected"),
  type_group = "iso3",
  type_sort = "year",
  source_col = NULL,
  source = NULL,
  replace_obs = c("missing", "all", "none"),
  error_correct = FALSE,
  error_correct_cols = NULL
)
}
\arguments{
\item{df}{Data frame of model data.}

\item{group_col}{Column name to split data frame prior to model application.}

\item{formula}{A formula that will be supplied to the model, such as \code{y~x}.}

\item{...}{Other arguments passed to the model function.}

\item{ret}{Character vector specifying what values the function returns. Defaults
to returning a data frame, but can return a vector of model error or a list
with the data frame and error together.}

\item{test_col}{Name of logical column specifying which response values to remove
for testing the model's predictive accuracy. If \code{NULL}, ignored.}

\item{pred_col}{Column name to store predicted value.}

\item{upper_col}{Column name to store upper bound of confidence interval.}

\item{lower_col}{Column name to store lower bound of confidence interval.}

\item{filter_na}{Character value specifying how, if at all, to filter \code{NA}
values from the dataset prior to applying the model.  By default, all
observations with missing values are removed, although it can also remove
rows only if they have missing dependent or independent variables, or no
filtering at all.}

\item{type_col}{Column name specifying data type.}

\item{types}{Vector of length 3 that provides the type to provide to data
produced in the model. These values are only used to fill in type values
where the dependent variable is missing. The first value is given to missing
observations that precede the first observation, the second to those after
the last observation, and the third for those following the final observation.}

\item{type_group}{Column name(s) of group(s) to use in \code{\link[dplyr:group_by]{dplyr::group_by()}} when
supplying type.}

\item{type_sort}{Column name to use to \code{\link[dplyr:arrange]{dplyr::arrange()}} the data prior to
supplying type.}

\item{replace_obs}{Character value specifying how, if at all, observations should
be replaced by fitted values. Defaults to replacing only missing values,
but can be used to replace all values or none.}

\item{error_correct}{Logical value indicating whether or not whether mean error
should be used to adjust predicted values. If \code{TRUE}, the mean error between
observed and predicted data points will be used to adjust predictions. If
\code{error_correct_cols} is not \code{NULL}, mean error will be used within those
groups instead of overall mean error.}

\item{error_correct_cols}{Column names of data frame to group by when applying
error correction to the predicted values.}
}
\value{
Depending on the value passed to \code{ret}, either a data frame with
predicted data, a vector of errors, a fitted model, or a list with all 3.
}
\description{
\code{grouped_predict_glm()} is a simple wrapper that fits a generalized linear model
(GLM) to each group to infill and project data. For details surrounding the
GLM fitting, please see \code{\link[stats:glm]{stats::glm()}} and for more details on the augury function this
wraps around and the various arguments this function accepts, please see
\code{\link[=grouped_predict_general_mdl]{grouped_predict_general_mdl()}}.
}
