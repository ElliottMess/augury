% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lme4_models.R
\name{fit_lme4_model}
\alias{fit_lme4_model}
\title{Fit general model to data}
\usage{
fit_lme4_model(
  df,
  model,
  formula,
  ...,
  formula_vars,
  test_col,
  group_col,
  group_models,
  pred_col,
  upper_col,
  lower_col,
  filter_na,
  ret,
  error_correct,
  error_correct_cols
)
}
\arguments{
\item{df}{Data frame of model data.}

\item{model}{An lme4 function that outputs a merMod object with that can be
passed to \code{\link[merTools:predictInterval]{merTools::predictInterval()}}. This should be one of \code{\link[lme4:lmer]{lme4::lmer()}},
\code{\link[lme4:glmer]{lme4::glmer()}}, or \code{\link[lme4:nlmer]{lme4::nlmer()}}.}

\item{formula}{A formula that will be supplied to the model, such as \code{y~x}.}

\item{...}{Other arguments passed to the model function.}

\item{formula_vars}{Variables included in the model formula, generated by
\code{all.vars(formula)}.}

\item{test_col}{Name of logical column specifying which response values to remove
for testing the model's predictive accuracy. If \code{NULL}, ignored.}

\item{group_col}{Column name(s) of group(s) to use in \code{\link[dplyr:group_by]{dplyr::group_by()}} when
supplying type, calculating mean absolute scaled error on data involving
time series, and if \code{group_models}, then fitting and predicting models too.}

\item{group_models}{Logical, if \code{TRUE}, fits and predicts models individually onto
each \code{group_col}. If \code{FALSE}, a general model is fit across the entire data
frame.}

\item{pred_col}{Column name to store predicted value.}

\item{upper_col}{Column name to store upper bound of confidence interval.}

\item{lower_col}{Column name to store lower bound of confidence interval.}

\item{filter_na}{Character value specifying how, if at all, to filter \code{NA}
values from the dataset prior to applying the model.  By default, all
observations with missing values are removed, although it can also remove
rows only if they have missing dependent or independent variables, or no
filtering at all.}

\item{ret}{Character vector specifying what values the function returns. Defaults
to returning a data frame, but can return a vector of model error, the
model itself or a list with all 3 as components.}

\item{error_correct}{Logical value indicating whether or not whether mean error
should be used to adjust predicted values. If \code{TRUE}, the mean error between
observed and predicted data points will be used to adjust predictions. If
\code{error_correct_cols} is not \code{NULL}, mean error will be used within those
groups instead of overall mean error.}

\item{error_correct_cols}{Column names of data frame to group by when applying
error correction to the predicted values.}
}
\value{
List of \code{mdl} (fitted model) and \code{df} (data frame with fitted values
and confidence bounds generated from the model).
}
\description{
Used within \code{predict_lme4()}, this function fits the model to the data
frame, working whether the model is being fit across the entire data frame or
being fit to each group individually. Data is filtered prior to fitting,
model(s) are fit, and then fitted values are generated on the original.
}
\details{
If fitting models individually to each group, \code{mdl} will never be returned, as
as these are instead a large group of models. Otherwise, a list of \code{mdl} and \code{df}
is returned and used within \code{predict_general_mdl()}.
}
