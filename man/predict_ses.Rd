% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecast_models_wrappers.R
\name{predict_ses}
\alias{predict_ses}
\title{Use simple exponential smoothing to forecast data}
\usage{
predict_ses(
  df,
  response,
  ...,
  ret = c("df", "all", "error", "model"),
  test_col = NULL,
  group_col = NULL,
  group_models = FALSE,
  sort_col = NULL,
  sort_descending = FALSE,
  pred_col = "pred",
  upper_col = "upper",
  lower_col = "lower",
  filter_na = c("all", "response", "predictors", "none"),
  type_col = NULL,
  types = c("imputed", "imputed", "projected"),
  source_col = NULL,
  source = NULL,
  replace_obs = c("missing", "all", "none")
)
}
\arguments{
\item{df}{Data frame of model data.}

\item{response}{Column name of response variable to be used as the input to the
forecast function.}

\item{...}{Additional arguments passed to the forecast function.}

\item{ret}{Character vector specifying what values the function returns. Defaults
to returning a data frame, but can return a vector of model error, the
model itself or a list with all 3 as components.}

\item{test_col}{Name of logical column specifying which response values to remove
for testing the model's predictive accuracy. If \code{NULL}, ignored.}

\item{group_col}{Column name(s) of group(s) to use in \code{\link[dplyr:group_by]{dplyr::group_by()}} when
supplying type, calculating mean absolute scaled error on data involving
time series, and if \code{group_models}, then fitting and predicting models too.}

\item{group_models}{Logical, if \code{TRUE}, fits and predicts models individually onto
each \code{group_col}. If \code{FALSE}, a general model is fit across the entire data
frame.}

\item{sort_col}{Column name of column to arrange data by in \code{dplyr::arrange()},
prior to filtering for latest contiguous time series and producing the
forecast.}

\item{sort_descending}{Logical value on whether the sorted values from \code{sort_col}
should be sorted in descending order. Defaults to \code{FALSE}.}

\item{pred_col}{Column name to store predicted value.}

\item{upper_col}{Column name to store upper bound of confidence interval.}

\item{lower_col}{Column name to store lower bound of confidence interval.}

\item{filter_na}{Character value specifying how, if at all, to filter \code{NA}
values from the dataset prior to applying the model.  By default, all
observations with missing values are removed, although it can also remove
rows only if they have missing dependent or independent variables, or no
filtering at all.}

\item{type_col}{Column name specifying data type.}

\item{types}{Vector of length 3 that provides the type to provide to data
produced in the model. These values are only used to fill in type values
where the dependent variable is missing. The first value is given to missing
observations that precede the first observation, the second to those after
the last observation, and the third for those following the final observation.}

\item{source_col}{Column name containing source information for the data frame.
If provided, the argument in \code{source} is used to fill in where predictions
have filled in missing data.}

\item{source}{Source to add to missing values.}

\item{replace_obs}{Character value specifying how, if at all, observations should
be replaced by fitted values. Defaults to replacing only missing values,
but can be used to replace all values or none.}
}
\value{
Depending on the value passed to \code{ret}, either a data frame with
predicted data, a vector of errors, a fitted model, or a list with all 3.
}
\description{
\code{predict_ses()} is a simple wrapper that uses simple exponential smoothing to
forecast data. For details surrounding the model fitting, please see
\code{\link[forecast:ses]{forecast::holt()}} and for more details on the augury function this wraps
around and the various arguments this function accepts, please see \code{\link[=predict_forecast]{predict_forecast()}}.
}
