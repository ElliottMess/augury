% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_average.R
\name{predict_average_fn}
\alias{predict_average_fn}
\title{Impute data using simple averages}
\usage{
predict_average_fn(
  df,
  col,
  average_cols = NULL,
  weight_col = NULL,
  flat_extrap = TRUE,
  test_col = NULL,
  group_col = NULL,
  obs_filter = NULL,
  pred_col = "pred",
  sort_col = NULL,
  sort_descending = FALSE,
  error_correct = FALSE,
  error_correct_cols = NULL,
  shift_trend = FALSE
)
}
\arguments{
\item{df}{Data frame of model data.}

\item{col}{Name of column to extrapolate/interpolate.}

\item{average_cols}{Column name(s) of column(s) for use in grouping data for averaging,
such as regions. If missing, uses global average of the data for infilling.}

\item{weight_col}{Column name of column of weights to be used in averaging, such
as country population.}

\item{flat_extrap}{Logical value determining whether or not to flat extrapolate
using the latest average for missing rows with no data available.}

\item{test_col}{Name of logical column specifying which response values to remove
for testing the model's predictive accuracy. If \code{NULL}, ignored. See \code{\link[=model_error]{model_error()}}
for details on the methods and metrics returned.}

\item{group_col}{Column name(s) of group(s) to use in \code{\link[dplyr:group_by]{dplyr::group_by()}} when
supplying type, calculating mean absolute scaled error on data involving
time series, and if \code{group_models}, then fitting and predicting models too.
If \code{NULL}, not used. Defaults to \code{"iso3"}.}

\item{obs_filter}{String value of the form "\verb{logical operator} \code{integer}"
that specifies the number of observations required to fit the model and
replace observations with predicted values. This is done in
conjunction with \code{group_col}. So, if \code{group_col = "iso3"} and
\code{obs_filter = ">= 5"}, then for this model, predictions will only be used
for \code{iso3} vales that have 5 or more observations. Possible logical operators
to use are \code{>}, \code{>=}, \code{<}, \code{<=}, \code{==}, and \code{!=}.}

\item{pred_col}{Column name to store predicted value.}

\item{sort_col}{Column name(s) to use to \code{\link[dplyr:arrange]{dplyr::arrange()}} the data prior to
supplying type and calculating mean absolute scaled error on data involving
time series. If \code{NULL}, not used. Defaults to \code{"year"}.}

\item{sort_descending}{Logical value on whether the sorted values from \code{sort_col}
should be sorted in descending order. Defaults to \code{FALSE}.}

\item{error_correct}{Logical value indicating whether or not whether mean error
should be used to adjust predicted values. If \code{TRUE}, the mean error between
observed and predicted data points will be used to adjust predictions. If
\code{error_correct_cols} is not \code{NULL}, mean error will be used within those
groups instead of overall mean error.}

\item{error_correct_cols}{Column names of data frame to group by when applying
error correction to the predicted values.}

\item{shift_trend}{Logical value specifying whether or not to shift predictions
so that the trend matches up to the last observation. If \code{error_correct} and
\code{shift_trend} are both \code{TRUE}, \code{shift_trend} takes precedence.}
}
\value{
A data frame.
}
\description{
\code{predict_average_fn()} does simple imputation and flat extrapolation
using averages grouped by \code{average_cols}.
}
